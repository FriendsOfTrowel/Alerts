/**
 * Alerts
 */
.alert {
    font-size: 1rem;
    font-family: 'Open Sans', verdana, sans-serif;
    line-height: 1.2;
    margin: 0 0 1em;
    padding: 0.65em 1.65em;
    border-radius: 0.2em;
    color: white; }

.alert--xs {
    font-size: 0.65rem; }

.alert--sm {
    font-size: 0.8rem; }

.alert--lg {
    font-size: 1.2rem; }

.alert--primary {
    background-color: #1f0d33; }

.alert--success {
    background-color: #37d3bd; }

.alert--warning {
    background-color: #ffb000; }

.alert--danger {
    background-color: #fd4164; }

.alert__times {
    position: relative;
    cursor: pointer;
    background: 0 0;
    border: 0;
    -webkit-appearance: none;
    float: right;
    font-size: inherit;
    color: inherit;
    padding: 0 0 0.325em 0.825em; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
